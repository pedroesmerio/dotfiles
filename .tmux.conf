set -g default-terminal "screen-256color" # colors!
set -g default-terminal "xterm-256color"
set -g default-terminal "screen.xterm-256color"
set -g default-terminal "tmux-256color"

set -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -g prefix c-a                        # gnu-screen compatible prefix
bind c-a send-prefix -2

set -q -g status-utf8 on                  # expect utf-8 (tmux < 2.2)
set -q -g utf8 on

set -g history-limit 5000                 # boost history

set -g mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on
set -g mouse-utf8 on



# reload configuration
  bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'


#- look'n feel -----------------------------------------------------------------
  set-option -g status-fg cyan
  set-option -g status-bg black
  set -g pane-active-border-style fg=colour166,bg=default
  set -g window-style fg=colour10,bg=default
  set -g window-active-style fg=colour12,bg=default
  set-option -g history-limit 64096


## -- colour ---------------------------------------------------------------------

## default statusbar colors
#set-option -g status-style bg=colour235,fg=colour136,default

## default window title colors
#set-window-option -g window-status-style fg=colour244,bg=colour234,dim

## active window title colors
#set-window-option -g window-status-current-style fg=colour166,bg=default,bright

## pane border
#set-option -g pane-border-style fg=colour235 #base02
#set-option -g pane-active-border-style fg=colour136,bg=colour235

## message text
#set-option -g message-style bg=colour235,fg=colour166

## pane number display
#set-option -g display-panes-active-colour colour33 #blue
#set-option -g display-panes-colour colour166 #orange

## clock
#set-window-option -g clock-mode-colour colour64 #green

## allow the title bar to adapt to whatever host you connect to
#set -g set-titles on
#set -g set-titles-string "#t"

# powerline
#source ~/.tmux.powerline.conf


# -- display -------------------------------------------------------------------

  set -g base-index 1           # start windows numbering at 1
  set -g pane-base-index 1     # make pane numbering consistent with windows

  set -g automatic-rename on   # rename window to reflect current program
  set -g renumber-windows on    # renumber windows when a window is closed

  set -g set-titles on          # set terminal title

  set -g display-panes-time 800 # slightly longer pane indicators display time
  set -g display-time 1000      # slightly longer status messages display time

  set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
  bind -n c-l send-keys c-l \; run 'sleep 0.1' \; clear-history

# activity
  set -g monitor-activity on
  set -g visual-activity off


# -- navigation ----------------------------------------------------------------

# create session
  bind c-c new-session

# find session
  bind c-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
  bind - split-window -v
# split current window vertically
  bind _ split-window -h

# pane navigation
  bind -r h select-pane -l  # move left
  bind -r j select-pane -d  # move down
  bind -r k select-pane -u  # move up
  bind -r l select-pane -r  # move right
  bind > swap-pane -d       # swap current pane with the next one
  bind < swap-pane -u       # swap current pane with the previous one

# maximize current pane
  bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #d'

# pane resizing
  bind -r h resize-pane -l 2
  bind -r j resize-pane -d 2
  bind -r k resize-pane -u 2
  bind -r l resize-pane -r 2

# window navigation
  unbind n
  unbind p
  bind -r c-h previous-window # select previous window
  bind -r c-l next-window     # select next window
  bind tab last-window        # move to last active window

# toggle mouse
  bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"


# -- urlview -------------------------------------------------------------------

  bind u run "cut -c3- ~/.tmux.conf | sh -s _urlview #{pane_id}"


# -- facebook pathpicker -------------------------------------------------------

  bind f run "cut -c3- ~/.tmux.conf | sh -s _fpp #{pane_id}"


# -- list choice (tmux < 2.4) --------------------------------------------------

# vi-choice is gone in tmux >= 2.4
#run -b 'tmux bind -t vi-choice h tree-collapse 2> /dev/null || true'
#run -b 'tmux bind -t vi-choice l tree-expand 2> /dev/null || true'
#run -b 'tmux bind -t vi-choice k start-of-list 2> /dev/null || true'
#run -b 'tmux bind -t vi-choice j end-of-list 2> /dev/null || true'
#run -b 'tmux bind -t vi-choice h tree-collapse-all 2> /dev/null || true'
#run -b 'tmux bind -t vi-choice l tree-expand-all 2> /dev/null || true'
#run -b 'tmux bind -t vi-choice escape cancel 2> /dev/null || true'


# -- edit mode (tmux < 2.4) ----------------------------------------------------

# vi-edit is gone in tmux >= 2.4
#run -b 'tmux bind -ct vi-edit h start-of-line 2> /dev/null || true'
#run -b 'tmux bind -ct vi-edit l end-of-line 2> /dev/null || true'
#run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
#run -b 'tmux bind -ct vi-edit escape cancel 2> /dev/null || true'


# -- copy mode -----------------------------------------------------------------

#bind enter copy-mode # enter copy mode

#run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
#run -b 'tmux bind -t copy-mode-vi v send -x begin-selection 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy c-v rectangle-toggle 2> /dev/null || true'
#run -b 'tmux bind -t copy-mode-vi c-v send -x rectangle-toggle 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
#run -b 'tmux bind -t copy-mode-vi y send -x copy-selection-and-cancel 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy escape cancel 2> /dev/null || true'
#run -b 'tmux bind -t copy-mode-vi escape send -x cancel 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy h start-of-line 2> /dev/null || true'
#run -b 'tmux bind -t copy-mode-vi h send -x start-of-line 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy l end-of-line 2> /dev/null || true'
#run -b 'tmux bind -t copy-mode-vi l send -x end-of-line 2> /dev/null || true'

## copy to x11 clipboard
#if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
#if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
## copy to macos clipboard
#if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
#if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
## copy to windows clipboard
#if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
#if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -- buffers -------------------------------------------------------------------

#bind b list-buffers  # list paste buffers
#bind p paste-buffer  # paste from the top paste buffer
#bind p choose-buffer # choose which buffer to paste from

# -- tpm -----------------------------------------------------------------------

# while i don't use tpm myself, many people requested official support so here
# is a seamless integration that automatically installs plugins in parallel

# whenever a plugin introduces a variable to be used in 'status-left' or
# 'status-right', you can use it in 'tmux_conf_theme_status_left' and
# 'tmux_conf_theme_status_right' variables.

# by default, launching tmux will update tpm and all plugins
#   - true (default)
#   - false
  tmux_conf_update_plugins_on_launch=true

# by default, reloading the configuration will update tpm and all plugins
#   - true (default)
#   - false
  tmux_conf_update_plugins_on_reload=true

# /!\ do not add set -g @plugin 'tmux-plugins/tpm'
# /!\ do not add run '~/.tmux/plugins/tpm/tpm'

# to enable a plugin, use the 'set -g @plugin' syntax:
# visit https://github.com/tmux-plugins for available plugins

# - tmux dracula theme config _______________________________________________________________________________
  set -g @plugin 'dracula/tmux'

# available plugins: battery, cpu-usage, gpu-usage, ram-usage, network, network-bandwith, weather, time
  set -g @dracula-plugins "battery cpu-usage gpu-usage ram-usage weather time"
  set -g @dracula-cpu-usage-label "cpu"
  set -g @dracula-gpu-usage-label "gpu"
  set -g @dracula-ram-usage-label "ram"

# available colors: white, gray, dark_gray, light_purple, dark_purple, cyan, green, orange, red, pink, yellow
# set -g @dracula-[plugin-name]-colors "[background] [foreground]"
#set -g @dracula-cpu-usage-colors "pink dark_gray"

  set -g @dracula-show-powerline true
# for left
#set -g @dracula-show-left-sep 

# for right symbol (can set any symbol you like as seperator)
  set -g @dracula-show-right-sep 

#set -g @dracula-show-flags true

# it can accept `session`, `smiley`, `window`, or any character.
  set -g @dracula-show-left-icon window

# default is 1, it can accept any number and 0 disables padding.
  set -g @dracula-left-icon-padding 1

#enable high contrast pane border
#set -g @dracula-border-contrast true

#- git options
#hide details of git changes
#set -g @dracula-git-disable-status true

#set symbol to use for when branch is up to date with head
# default is ✓. avoid using non unicode characters that bash uses like $, * and ! 
#set -g @dracula-git-show-current-symbol ✓

#set symbol to use for when branch diverges from head
# default is unicode !. avoid bash special characterj 
  set -g @dracula-git-show-diff-symbol !

#set symbol or message to use when the current pane has no git repo
# default is unicode no message
#set -g @dracula-git-no-repo-message "no git repo"

  set -g @dracula-show-fahrenheit false
# -- 8< ------------------------------------------------------------------------

  run 'cut -c3- ~/.tmux.conf | sh -s _apply_configuration'

  run -b '~/.tmux/plugins/tpm/tpm'

